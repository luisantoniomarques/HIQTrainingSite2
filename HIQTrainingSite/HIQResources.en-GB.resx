<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="appName" xml:space="preserve">
    <value>HIQ Trainig</value>
  </data>
  <data name="buttonAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="buttonAttendance" xml:space="preserve">
    <value>Presence</value>
  </data>
  <data name="buttonBack" xml:space="preserve">
    <value>Go back</value>
  </data>
  <data name="buttonChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="buttonConfirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="buttonCourse" xml:space="preserve">
    <value>Formations</value>
  </data>
  <data name="buttonCoursesTeached" xml:space="preserve">
    <value>Formations given</value>
  </data>
  <data name="buttonDelete" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="buttonDetail" xml:space="preserve">
    <value>Detail</value>
  </data>
  <data name="buttonEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="buttonHomePage" xml:space="preserve">
    <value>Main Page</value>
  </data>
  <data name="buttonSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="buttonStudents" xml:space="preserve">
    <value>Trainees</value>
  </data>
  <data name="dropdownAllOptions" xml:space="preserve">
    <value>-- All --</value>
  </data>
  <data name="errorMessageDuplicateName" xml:space="preserve">
    <value>The name already exists.</value>
  </data>
  <data name="errorMessageDuplicateRecord" xml:space="preserve">
    <value>Duplicate registration.</value>
  </data>
  <data name="errorMessageExceptionOccurred" xml:space="preserve">
    <value>An error has occurred. Could not perform operation. Please call the application administrator.</value>
  </data>
  <data name="errorMessageInvalidPayRoll" xml:space="preserve">
    <value>Invalid daily value</value>
  </data>
  <data name="errorMessagePasswordAndConfirmPasseordDontMatch" xml:space="preserve">
    <value>{0} and {1} are not equal.</value>
  </data>
  <data name="errorMessageRequired" xml:space="preserve">
    <value>Required field</value>
  </data>
  <data name="errorMessageStringMaxLength" xml:space="preserve">
    <value>Please fill in {0}, and no more than {1} characters.</value>
  </data>
  <data name="errorMessageStringMaxMinLength" xml:space="preserve">
    <value>Please fill in {0} at most {1} characters and at least {2}.</value>
  </data>
  <data name="errorMessageStudentInscriptionAlreadyMade" xml:space="preserve">
    <value>Repeat Subscription</value>
  </data>
  <data name="errorMessageStudentNotFound" xml:space="preserve">
    <value>Unknown User</value>
  </data>
  <data name="errorMessageUnableToDeleteRecor" xml:space="preserve">
    <value />
  </data>
  <data name="errorMessageUnableToDeleteRecord" xml:space="preserve">
    <value>You can not delete the registry because there are dependencies.</value>
  </data>
  <data name="errorMessageUnableToExecuteOperation" xml:space="preserve">
    <value>Could not perform operation</value>
  </data>
  <data name="errorMessageUnknownAction" xml:space="preserve">
    <value>Unknown action.</value>
  </data>
  <data name="errorMessageUnknownUser" xml:space="preserve">
    <value>Unknown user.</value>
  </data>
  <data name="eventAddConfirmed" xml:space="preserve">
    <value>Note added to calendar.</value>
  </data>
  <data name="eventDeleteConfirmed" xml:space="preserve">
    <value>Note removed from calendar.</value>
  </data>
  <data name="genericQuestionAreYouSureDelete" xml:space="preserve">
    <value>Are you sure you want to remove the record?</value>
  </data>
  <data name="labelApplicationRoles" xml:space="preserve">
    <value>Application Privileges</value>
  </data>
  <data name="labelAttended" xml:space="preserve">
    <value>Presente</value>
  </data>
  <data name="labelCanceled" xml:space="preserve">
    <value>Canceled</value>
  </data>
  <data name="labelCanceledObservation" xml:space="preserve">
    <value>Notes on cancelling</value>
  </data>
  <data name="labelCompanyName" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="labelCourseDate" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="labelCourseLevelName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="labelCourseLocationName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="labelCourseName" xml:space="preserve">
    <value>Nome</value>
  </data>
  <data name="labelCourseStatus" xml:space="preserve">
    <value>Condition</value>
  </data>
  <data name="labelCourseTypeName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="labelEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="labelFinished" xml:space="preserve">
    <value>Finished</value>
  </data>
  <data name="labelGenericCreatedDate" xml:space="preserve">
    <value>Date of Creation</value>
  </data>
  <data name="labelGenericUpdatedDate" xml:space="preserve">
    <value>Date Update</value>
  </data>
  <data name="labelGenericUserCreated" xml:space="preserve">
    <value>User Creation</value>
  </data>
  <data name="labelGenericUserUpdated" xml:space="preserve">
    <value>User Update</value>
  </data>
  <data name="labelInscriptionStatus" xml:space="preserve">
    <value>State Registration</value>
  </data>
  <data name="labelInscriptionType" xml:space="preserve">
    <value>Type Subscription</value>
  </data>
  <data name="labelLocationName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="labelNumberHours" xml:space="preserve">
    <value>Number of hours</value>
  </data>
  <data name="labelPayRoll" xml:space="preserve">
    <value>Daily Value</value>
  </data>
  <data name="labelPhoneNumber" xml:space="preserve">
    <value>Telephone</value>
  </data>
  <data name="labelskills" xml:space="preserve">
    <value>Technical area</value>
  </data>
  <data name="labelStudentName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="labelStudentStatus" xml:space="preserve">
    <value>Condition</value>
  </data>
  <data name="labelUserConfirmPassword" xml:space="preserve">
    <value>Password Confirmation</value>
  </data>
  <data name="labelUserEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="labelUserName" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="labelUserPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="labelUserRoles" xml:space="preserve">
    <value>User Privileges</value>
  </data>
  <data name="languageEN" xml:space="preserve">
    <value>EN</value>
  </data>
  <data name="languagePT" xml:space="preserve">
    <value>PT</value>
  </data>
  <data name="loginAttemptFailed" xml:space="preserve">
    <value>Login attemp failed</value>
  </data>
  <data name="loginFailedPassword" xml:space="preserve">
    <value>Login falhou: your password was entered incorrectly</value>
  </data>
  <data name="loginFailedUser" xml:space="preserve">
    <value>Login falhou: your username was entered incorrectly</value>
  </data>
  <data name="loginFailedUserPassword" xml:space="preserve">
    <value>Login failed: our username or password was entered incorrectly</value>
  </data>
  <data name="menuAdministration" xml:space="preserve">
    <value>Administration</value>
  </data>
  <data name="menuCertification" xml:space="preserve">
    <value>Certifications</value>
    <comment>.</comment>
  </data>
  <data name="menuConfiguration" xml:space="preserve">
    <value>Configurations</value>
    <comment>.</comment>
  </data>
  <data name="menuCourses" xml:space="preserve">
    <value>Courses</value>
    <comment>.</comment>
  </data>
  <data name="menuLogin" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="menuRegister" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="menuStatistics" xml:space="preserve">
    <value>Statistics</value>
    <comment>.</comment>
  </data>
  <data name="messageError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="messageOperationSuccess" xml:space="preserve">
    <value>Operation performed successfully.</value>
  </data>
  <data name="messageSuccess" xml:space="preserve">
    <value>Sucess</value>
  </data>
  <data name="questionEventAdd" xml:space="preserve">
    <value>Note Description:</value>
  </data>
  <data name="questionEventDelete" xml:space="preserve">
    <value>Do you want to delete the note ?</value>
  </data>
  <data name="submenuAttendance" xml:space="preserve">
    <value>Events</value>
  </data>
  <data name="submenuCalendar" xml:space="preserve">
    <value>Calendar</value>
  </data>
  <data name="submenuCertificationArea" xml:space="preserve">
    <value>Certification Area</value>
  </data>
  <data name="submenuCertificationLocations" xml:space="preserve">
    <value>Certification Locations</value>
  </data>
  <data name="submenuCertificationResult" xml:space="preserve">
    <value>Certification Result</value>
  </data>
  <data name="submenuCompany" xml:space="preserve">
    <value>Companies</value>
  </data>
  <data name="submenuCourses" xml:space="preserve">
    <value>Formations</value>
  </data>
  <data name="submenuCourseType" xml:space="preserve">
    <value>Types of Formation</value>
  </data>
  <data name="submenuInscription" xml:space="preserve">
    <value>Registrations</value>
  </data>
  <data name="submenuInscriptionTypes" xml:space="preserve">
    <value>Types of Registration</value>
  </data>
  <data name="submenuLevels" xml:space="preserve">
    <value>Training Levels</value>
  </data>
  <data name="submenuLocations" xml:space="preserve">
    <value>Training Rooms</value>
  </data>
  <data name="submenuStudents" xml:space="preserve">
    <value>Trainees</value>
  </data>
  <data name="submenuUsers" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="SuccessDeleted" xml:space="preserve">
    <value>Registry successfully removed.</value>
  </data>
  <data name="SuccessUpdated" xml:space="preserve">
    <value>Registration updated successfully.</value>
  </data>
  <data name="titleAdd" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="titleAddEditNote" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="titleAttendanceList" xml:space="preserve">
    <value>Attendance List</value>
  </data>
  <data name="titleCourseLevel" xml:space="preserve">
    <value>Training Level</value>
  </data>
  <data name="titleCourseLevelList" xml:space="preserve">
    <value>List of Training Levels</value>
  </data>
  <data name="titleCourseList" xml:space="preserve">
    <value>List of Formations</value>
  </data>
  <data name="titleCourseLocation" xml:space="preserve">
    <value>Formation Room</value>
  </data>
  <data name="titleCourseLocationList" xml:space="preserve">
    <value>List of Training Rooms</value>
  </data>
  <data name="titleCourseType" xml:space="preserve">
    <value>Type of training</value>
  </data>
  <data name="titleCourseTypeList" xml:space="preserve">
    <value>List of Types of Formation</value>
  </data>
  <data name="titleDelete" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="titleDeleteNote" xml:space="preserve">
    <value>Remove Note</value>
  </data>
  <data name="titleDetail" xml:space="preserve">
    <value>Detail</value>
  </data>
  <data name="titleEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="titleError" xml:space="preserve">
    <value>An error has occurred</value>
  </data>
  <data name="titleEventCalendar" xml:space="preserve">
    <value>User Notes</value>
  </data>
  <data name="titleHello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="titleInscription" xml:space="preserve">
    <value>Inscription</value>
  </data>
  <data name="titleInscriptionList" xml:space="preserve">
    <value>List of Entries</value>
  </data>
  <data name="titleLogOff" xml:space="preserve">
    <value>Log Off</value>
  </data>
  <data name="titleOperations" xml:space="preserve">
    <value>operations</value>
  </data>
  <data name="titleSelectUserRoles" xml:space="preserve">
    <value>Select user privileges:</value>
  </data>
  <data name="titleStudent" xml:space="preserve">
    <value>Trainees</value>
  </data>
  <data name="titleStudentList" xml:space="preserve">
    <value>Students List</value>
  </data>
  <data name="titleUser" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="titleUsersList" xml:space="preserve">
    <value>User List</value>
  </data>
  <data name="titlevalidationMessage" xml:space="preserve">
    <value>Presences</value>
  </data>
  <data name="validationPresence" xml:space="preserve">
    <value>This course needs to be scheduled</value>
  </data>
  <data name="submenuFormativeEntities" xml:space="preserve">
    <value>Training Entities</value>
  </data>
  <data name="submenuTeacher" xml:space="preserve">
    <value>Trainers</value>
  </data>
  <data name="titleTeacher" xml:space="preserve">
    <value>Trainers</value>
  </data>
  <data name="submenuCompanyStudents" xml:space="preserve">
    <value>Company Students</value>
  </data>
  <data name="submenuCourseEffort" xml:space="preserve">
    <value>Course Effort</value>
  </data>
  <data name="submenuCourseStatistics" xml:space="preserve">
    <value>Course Statistics</value>
  </data>
  <data name="submenuStudentInscriptions" xml:space="preserve">
    <value>Student Inscriptions</value>
  </data>
  <data name="buttonSearch" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="buttonClean" xml:space="preserve">
    <value>Clean</value>
  </data>
  <data name="labelStartDate" xml:space="preserve">
    <value>Begin Date</value>
  </data>
  <data name="labelCloseDate" xml:space="preserve">
    <value>Close Date</value>
  </data>
  <data name="placeholderSearchCourse" xml:space="preserve">
    <value>Search Course</value>
  </data>
  <data name="placeholderSearchTeacher" xml:space="preserve">
    <value>Search Teacher</value>
  </data>
  <data name="errorMessageDateEmpty" xml:space="preserve">
    <value>Date field is empty</value>
  </data>
  <data name="errorInvalidEmail" xml:space="preserve">
    <value>Invalid email.</value>
  </data>
  <data name="submenuImport" xml:space="preserve">
    <value>Excell Import</value>
  </data>
  <data name="titleImport" xml:space="preserve">
    <value>Import from Excell</value>
  </data>
  <data name="labelExcellPath" xml:space="preserve">
    <value>The files to import should be in the directory: C: \ HIQTraining \ ExcellImport</value>
  </data>
  <data name="errorFileToLong" xml:space="preserve">
    <value>Very long file. Maximum 2MB</value>
  </data>
  <data name="errorNotExcel" xml:space="preserve">
    <value>The file is not of type Excel</value>
  </data>
</root>