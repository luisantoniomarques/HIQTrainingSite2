@model HIQTrainingSite.ViewModel.CertificationViewModel

@{
    ViewBag.Title = HIQResources.submenuCertificationResult;
    @section css
        {
        <link href="@Url.Content("~/layout/css/stylesformador.css")" rel="stylesheet" />
        <link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
@*<link href="~/Content/fullcalendar.css" rel="stylesheet" />*@
@*<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css">*@
    }
}

<div class="mainblock">
    <div class="block-group">
        <div class="ttitle title">@HIQResources.submenuCertificationResult</div>
    </div>


    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="md-content">
            <div class="block-group">
                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control inputForm", @readonly = "readonly" } })
                            @Html.HiddenFor(model => model.StudentId)
                            @Html.HiddenFor(model => model.Id)
                        </div>
                        @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StudentEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.StudentEmail, new { htmlAttributes = new { @class = "form-control inputForm", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control inputForm" } })
                            @Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.CertificationTypeId)
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.pdf, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">                  
                            <input type="file" name="file" />
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control inputForm", @readonly = "readonly"}})
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SelectedEntityId, htmlAttributes: new{ @class = "control-label col-md-2"})
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.SelectedEntityId, Model.EntitiesDrop, htmlAttributes: new { @class = "form-control inputForm" })
                            @Html.HiddenFor(model => model.SelectedEntityId)
                            @Html.ValidationMessageFor(model => model.SelectedEntityId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StatusId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.StatusId, Model.StatusDrop, htmlAttributes: new { @class = "form-control inputForm" })
                            @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" id="result-div">
                        @Html.LabelFor(model => model.Result, htmlAttributes: new { @class = "control-label col-md-2"})
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Result, new { htmlAttributes = new { @class = "form-control inputForm" }})
                            @Html.ValidationMessageFor(model => model.Result, "", new{ @class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Date, htmlAttributes: new{@class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control inputForm", @display = "{0:dd/MM/yyyy}" } })
                            @Html.ValidationMessageFor(model => model.Date, "", new{ @class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Observation, htmlAttributes: new{@class = "control-label col-md-2"})
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.Observation, new{ htmlAttributes = new{ @class = "form-control inputForm" } })
                            @Html.ValidationMessageFor(model => model.Observation, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-8">
                            <input type="submit" value="@HIQResources.buttonSave" class="btn btn-default btn-sm btn-formation" />
                            @Html.ActionLink(HIQResources.buttonBack, "CertificationList", new { id = Model.StudentId, nome = Model.StudentName }, new { @class = "btn btn-default btn-sm btn-edit" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@using(Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@HIQResources.titleAdd</h4>
        <hr />

    </div>

}

@section Scripts{
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryval")
    @*<script src="~/Scripts/lib/moment.min.js"></script>
    <script src="~/Scripts/fullcalendar.js"></script>

    <script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>*@
    <script src="~/Scripts/HIQTrainingScripts/Certification/Create.js"></script>
    <script>
        $("#Date").datepicker({ dateFormat: 'yy/mm/dd' });
        @*$('#Date').datepicker({ dateFormat: 'dd/mm/yy' });
       
       $("#Date").datepicker("option", "dateFormat", "dd/mm/yy");

       $("#Date").datepicker('setDate', new Date());*@
</script>
}
