@model HIQTrainingSite.ViewModel.TeacherViewModel

@{
    ViewBag.Title = HIQResources.titleTeacher;
    @section css
        {
        <link href="@Url.Content("~/layout/css/stylesformador.css")" rel="stylesheet" />
    }
}

<style type="text/css">
    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>

<div class="mainblock">
    <div class="block-group">
        <div class="ttitle title">@HIQResources.titleTeacher @HIQResources.titleAdd</div>
    </div>
    <div class="md-content">
        <div class="block-group">
            @using (Html.BeginForm("Create", "Teacher", new { returnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.isExternal)
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.Label("Tipo de Empresa", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            <label class="checkbox-inline"><input type="checkbox"  id="checkboxInternal" value="" @ViewBag.statusChekedboxInternal>Formador Interno</label>
                            <label class="checkbox-inline"><input type="checkbox" id="checkboxExternal" value="" @ViewBag.statusChekedboxExternal>Formador Externo</label>
                            @Html.ValidationMessageFor(model => model.SelectedCompanyId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div id="formularioTeacher" style="display:none">
                        <div class="form-group">
                            @Html.LabelFor(model => model.SelectedCompanyId, htmlAttributes: new { @class = "required control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.SelectedCompanyId, Model.CompaniesDrop, htmlAttributes: new { @class = "form-control inputForm" })
                                @Html.ValidationMessageFor(model => model.SelectedCompanyId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "required control-label col-md-2" })
                            <div class="col-md-8">
                              @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control inputForm", autocomplete = "off", @id= "NameTeacher" } })              
                              @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control inputForm" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control inputForm" } })
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.TecnicalSkill, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.TextAreaFor(model => model.TecnicalSkill, new { htmlAttributes = new { @class = "form-control textArea" } })
                                @Html.ValidationMessageFor(model => model.TecnicalSkill, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="@HIQResources.buttonSave" class="btn btn-default btn-sm btn-formation" />
                                @Html.ActionLink(HIQResources.buttonBack, "Index", null, new { @class = "btn btn-default btn-sm btn-edit", Href = Request.UrlReferrer })
                            </div>
                        </div>
                    </div>

                </div>
            }
        </div>
    </div>
    </div>

@section styles {
    <link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
}
 
@section scripts {
 @Scripts.Render("~/bundles/jquery")
 @Scripts.Render("~/bundles/jqueryval")
 <script src="~/Scripts/HIQTrainingScripts/Teacher/Create.js"></script>
 <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
}

