@model HIQTrainingSite.ViewModel.UserViewModel

@{
    ViewBag.Title = HIQResources.titleUser;
    @section css
        {
        <link href="@Url.Content("~/layout/css/stylesformador.css")" rel="stylesheet" />
    }
}


<div class="mainblock">
    <div class="block-group">
        <div class="ttitle title">@HIQResources.titleUser @HIQResources.titleAdd</div>
    </div>

    <div class="md-content">
        <div class="block-group">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">    
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.CompanyId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.HiddenFor(model => model.CompanyId)
                            @Html.DropDownListFor(model => model.Companies.SelectedCompanyId, Model.Companies.CompanyNames, htmlAttributes: new { @class = "form-control inputForm", @id = "SelectedCompanyId" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control inputForm", @autocomplete = @Url.Action("SearchUsersByName") } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control inputForm", @readonly = "readonly" } })
                        </div>
                    </div>

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control inputForm" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control inputForm" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">

                           
                                <div class="panel-body">
                                    <div class="btn-group-vertical">
                                        @for (int i = 0; i < Model.ApplicationRoles.Count; i++)
                                        {
                                            <div class="checkbox">
                                                <label>@Html.CheckBoxFor(s => s.ApplicationRoles[i].IsSelected, new { }) @Model.ApplicationRoles[i].Name</label>
                                            
                                                @Html.HiddenFor(s => s.ApplicationRoles[i].Id)
                                                @Html.HiddenFor(s => s.ApplicationRoles[i].Name)
                                            </div>
                                        }
                                            </div>

                                </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.ApplicationRoles, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DisplayColor, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.DisplayColor, new { htmlAttributes = new { @class = "form-control jscolor inputFormColor" } })
                            @Html.ValidationMessageFor(model => model.DisplayColor, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="@HIQResources.buttonSave" class="btn btn-default btn-sm btn-formation" />
                            @Html.ActionLink(HIQResources.buttonBack, "Index", null, new { @class = "btn btn-default btn-sm btn-edit" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@section styles {
    <link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
}
@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/HIQTrainingScripts/User/SearchUser.js")
    @Scripts.Render("~/Scripts/HIQTrainingScripts/Utils/button-checkbox.js")
    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
    <script src="~/Scripts/jscolor.js"></script>

}


